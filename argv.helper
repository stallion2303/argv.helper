#!/bin/sh

### Copyright (—Å) Lysenko Ivan (stallion2303) ###
### argv.helper ###

### <HEADER> ###
_header() {
    BASENAME="${BASENAME-"$(basename $0)"}"
    DEF_LIST=""
    NL='
'
    DOWNLOAD=${DOWNLOAD-'wget --quiet --timeout=2 --tries=1
                          --output-document=- https://raw.githubusercontent.com/stallion2303/argv.helper/main/argv.helper'}

  if [ -n "$DOWNLOAD" ];then
        local O=""
        O="$($DOWNLOAD 2>&1)"
        if [ "$?" -eq 0 ]; then
            [ -w "$0" ] && printf '%s\n' "$O" >"$0"
            printf '%s\n' "$O" | BASENAME="$BASENAME" DOWNLOAD="" sh -s -- "$@"
            exit "$?"
        fi
    fi
}
_header "$@"

def() {
    local BODY="$(cat)"
    local HELP="$(echo "$BODY" | awk -v s=0 '{if ($0~/^\s*#/ && s==0){gsub(/^\s*#\s*/,"",$0);print $0} else s=1}')"
    eval "
        ${1}_body=\$BODY
        ${1}_help=\$HELP
        $1() {
            $BODY
        }
    "
    [ -z "$DEF_LIST" ] && DEF_LIST="$1" || DEF_LIST="$DEF_LIST$NL$1"
}
### </HEADER> ###

def fun1 << 'EOF'
    # help fun1
    echo "Foo"
EOF

def fun2 << 'EOF'
    # arg1 name
    echo "Hello $1"
EOF

def fun3 << 'EOF'
    # multiline comment
    # line2
    # line3
    echo "Bar"
EOF

def _hidden_fun << 'EOF'
    echo "exec _hidden_fun"
EOF

### <BOTTOM> ###
_bottom() (
 DEFAULT_FUNCTION=${DEFAULT_FUNCTION-'help'}
 [ "$#" -lt 1 ] && set -- "--${DEFAULT_FUNCTION#--}" -- || set -- "$@" --
 [ -n "$(echo "$@" | grep -E "^(-?-?help|-h) --$")" -o "$*" = '-- --' ] \
  && [ -z "$(type help | head -n1 | grep -w function)" ] \
  && echo "Usage: $BASENAME [COMMAND [ARGS]]" \
  && for i in $(echo "$DEF_LIST" | sed '/^_/d');do
      H="$(eval echo \"\${${i}_help}\")"
      echo " --$i$([ -n "$H" ] && printf "\n%s" "$H" | sed 's/^/  /')"
     done \
  && exit 1
 r='';c='';a=''
 for i in "$@";do
  if [ -n "$(echo "$i" | grep '^--')" ];then
   if [ -n "$c" ];then
    [ -z "$(printf "help\n$DEF_LIST\n" | grep "^$c$")" ] \
     && echo "No function $c avalible!" && return 2
    eval "$c$a"
    r="$?";c='';a=''
   fi
   c="$(echo "$i" | sed 's/^--//1')"
  else
   a="$a '$i'"
  fi
 done
 [ -n "$r" ] && return "$r" || return 3
)
_bottom "$@"
### </BOTTOM> ###
