#!/bin/sh

### Copyright (c) Lysenko Ivan (stallion2303) ###
### argv.helper ###

### <HEADER> ###
### <GLOBAL VARIABLES> ###
: ${_FULLNAME="$(readlink -f "$0")"}
: ${_DOWNLOAD='wget --quiet --timeout=2 --tries=1
                --output-document=- https://raw.githubusercontent.com/stallion2303/argv.helper/main/argv.helper'}
: ${_LIMITER='head -c1m'}
: ${_DEFAULT_FUNCTION='help'}
### </GLOBAL VARIABLES> ###
_header() {
    if [ -n "$_DOWNLOAD" ] && [ -n "$_LIMITER" ]; then
        local O
        O="$( ( ( ( ($_DOWNLOAD; echo "$?" >&3; printf .) \
                  | $_LIMITER >&4) 3>&1) \
              | (read r; exit "$r") ) 4>&1)"
        if [ "$?" -eq 0 ] && [ "${#O}" -gt 1 ]; then
            printf '%s' "${O%.}" | cmp -s "$0" -
            if [ "$?" -ne 0 ]; then
                [ -w "$0" ] && printf '%s' "${O%.}" >"$0"
                printf '%s' "${O%.}" | _FULLNAME="$_FULLNAME" _DOWNLOAD='' sh -s -- "$@"
                exit "$?"
            fi
        fi
    fi
}
_header "$@"

def() {
    local BODY HELP
    BODY="$(cat; printf .)"
    HELP="$(echo "${BODY%.}" \
     | awk '{
        if ($0~/^[[:space:]]*#/ && s==0){
            gsub(/^[[:space:]]*#[[:space:]]*/,"",$0);
            print $0
        }else{printf "."; exit}}')"
    eval "
        ${1}_body=\${BODY%.}
        ${1}_help=\${HELP%.}
        $1() {
            ${BODY%.}
        }
    "
    [ -z "${_DEF_LIST+x}" ] \
     && _DEF_LIST="$1" \
     || _DEF_LIST="$(printf '%s\n%s' "$_DEF_LIST" "$1")"
}
### </HEADER> ###

def fun1 << 'EOF'
    # help fun1
    echo "Run $_CMD, argv=$_ARGV"
EOF

def fun2 << 'EOF'
    # arg1 name
    echo "Hello $1"
EOF

def multiline << 'EOF'
    # multiline comment
    # line2
    # line3
    #
    # lineN
    #
    printf '%s' "$multiline_help"
EOF

def show_myself << 'EOF'
    printf "$show_myself_body"
EOF

def _hidden_fun << 'EOF'
    echo "exec $_CMD"
EOF

### <BOTTOM> ###
_bottom() (
 [ "$#" -lt 1 ] && set -- "--${_DEFAULT_FUNCTION#--}" -- || set -- "$@" --
 [ -z "$(type help | head -n1 | grep -w function)" ] \
  && _DEF_LIST="$(printf '%s\nhelp' "$_DEF_LIST")" && help() (
      echo "Usage: $(basename "$_FULLNAME") [COMMAND [ARGS]]"
      for i in $(printf "$_DEF_LIST" | sed '/^_/d' | sort); do
       H="$(eval printf '%s.' \"\${${i}_help}\")"
       echo " --$i$([ -n "${H%.}" ] && printf "\n%s" "${H%.}" | sed 's/^/  /')"
     done)
 r=''; c=''; a=''
 for i in "$@"; do
  if [ -n "$(echo "$i" | grep '^--')" ]; then
   if [ -n "$c" ]; then
    [ -z "$(printf "$_DEF_LIST" | grep "^$c$")" ] \
     && echo "No function $c avalible!" && return 2
    (_CMD="$c"; _ARGV="$a"; unset i r c a; eval "$_CMD$_ARGV")
    r="$?"; c=''; a=''
   fi
   c="$(echo "$i" | sed 's/^--//1')"
  else
   a="$a '$i'"
  fi
 done
 [ -n "$r" ] && return "$r" || return 3
)
_bottom "$@"
### </BOTTOM> ###
